{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js\";\nimport React from 'react';\nimport commentBox from 'commentbox.io';\n\nclass PageWithComments extends React.Component {\n  componentDidMount() {\n    let id_value = this.props.id;\n    this.removeCommentBox = commentBox('5725357550338048-proj', {\n      defaultBoxId: this.props.id,\n      className: 'comment-box',\n      // the class of divs to look for\n      tlcParam: 'tlc-id',\n      // used for identifying links to comments on your page\n      backgroundColor: 'lightblue',\n      // default transparent\n      textColor: 'green',\n      // default black\n      subtextColor: 'green',\n      // default grey\n      singleSignOn: null,\n\n      // enables Single Sign-On (for Professional plans only)\n\n      /**\n       * Creates a unique URL to each box on your page.\n       * \n      @param {string} boxId\n      @param {string} pageLocation - a copy of the current window.location\n      @returns {string}\n       */\n      createBoxUrl(boxId, pageLocation) {\n        pageLocation.search = this.props.id; // removes query string!\n\n        pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n\n        console.log(\"Inside createBoxUrl\", \"ID\", boxId, \"Pagelocation\", pageLocation, \"Pagelocation href\", pageLocation.href, 'Pagelocation hash', pageLocation.hash);\n        return pageLocation.href; // return url string\n      },\n\n      /**\n       * Fires once the plugin loads its comments.\n       * May fire multiple times in its lifetime.\n       * \n       @param {number} count\n       */\n      onCommentCount(count) {\n        console.log(\"Comment count\", count);\n      }\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeCommentBox();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"comment-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PageWithComments;","map":{"version":3,"sources":["/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js"],"names":["React","commentBox","PageWithComments","Component","componentDidMount","id_value","props","id","removeCommentBox","defaultBoxId","className","tlcParam","backgroundColor","textColor","subtextColor","singleSignOn","createBoxUrl","boxId","pageLocation","search","hash","console","log","href","onCommentCount","count","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,EAA1B;AACA,SAAKC,gBAAL,GAAwBP,UAAU,CAAC,uBAAD,EAAyB;AACvDQ,MAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC,EAD8B;AAEvDG,MAAAA,SAAS,EAAE,aAF4C;AAE7B;AAC1BC,MAAAA,QAAQ,EAAE,QAH6C;AAGnC;AACpBC,MAAAA,eAAe,EAAE,WAJsC;AAIzB;AAC9BC,MAAAA,SAAS,EAAE,OAL4C;AAKnC;AACpBC,MAAAA,YAAY,EAAE,OANyC;AAMhC;AACvBC,MAAAA,YAAY,EAAE,IAPyC;;AAOnC;;AACpB;;;;;;;AAOAC,MAAAA,YAAY,CAACC,KAAD,EAAQC,YAAR,EAAsB;AAC9BA,QAAAA,YAAY,CAACC,MAAb,GAAsB,KAAKb,KAAL,CAAWC,EAAjC,CAD8B,CACO;;AACrCW,QAAAA,YAAY,CAACE,IAAb,GAAoBH,KAApB,CAF8B,CAEH;;AAC3BI,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC,IAAlC,EAAuCL,KAAvC,EAA6C,cAA7C,EAA4DC,YAA5D,EAAyE,mBAAzE,EAA6FA,YAAY,CAACK,IAA1G,EAA+G,mBAA/G,EAAmIL,YAAY,CAACE,IAAhJ;AACA,eAAOF,YAAY,CAACK,IAApB,CAJ8B,CAIJ;AAE7B,OArBsD;;AAsBvD;;;;;;AAMAC,MAAAA,cAAc,CAACC,KAAD,EAAQ;AAClBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACH;;AA9BsD,KAAzB,CAAlC;AAgCH;;AAEDC,EAAAA,oBAAoB,GAAG;AAEnB,SAAKlB,gBAAL;AACH;;AAEDmB,EAAAA,MAAM,GAAG;AAEL,WACG,0CACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH;AAKH;;AAlD0C;;AAqD/C,eAAezB,gBAAf","sourcesContent":["import React from 'react';\nimport commentBox from 'commentbox.io';\n\nclass PageWithComments extends React.Component {\n\n    componentDidMount() {\n        let id_value = this.props.id\n        this.removeCommentBox = commentBox('5725357550338048-proj',{\n            defaultBoxId: this.props.id,\n            className: 'comment-box', // the class of divs to look for\n            tlcParam: 'tlc-id', // used for identifying links to comments on your page\n            backgroundColor: 'lightblue', // default transparent\n            textColor: 'green', // default black\n            subtextColor: 'green', // default grey\n            singleSignOn: null, // enables Single Sign-On (for Professional plans only)\n            /**\n             * Creates a unique URL to each box on your page.\n             * \n            @param {string} boxId\n            @param {string} pageLocation - a copy of the current window.location\n            @returns {string}\n             */\n            createBoxUrl(boxId, pageLocation) {\n                pageLocation.search = this.props.id; // removes query string!\n                pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n                console.log(\"Inside createBoxUrl\",\"ID\",boxId,\"Pagelocation\",pageLocation,\"Pagelocation href\",pageLocation.href,'Pagelocation hash',pageLocation.hash)\n                return pageLocation.href; // return url string\n                \n            },\n            /**\n             * Fires once the plugin loads its comments.\n             * May fire multiple times in its lifetime.\n             * \n             @param {number} count\n             */\n            onCommentCount(count) {\n                console.log(\"Comment count\", count)\n            }\n        });\n    }\n\n    componentWillUnmount() {\n\n        this.removeCommentBox();\n    }\n\n    render() {\n\n        return (\n           <> \n            <div className=\"comment-box\"/>\n           </>\n        );\n    }\n}\n\nexport default PageWithComments"]},"metadata":{},"sourceType":"module"}