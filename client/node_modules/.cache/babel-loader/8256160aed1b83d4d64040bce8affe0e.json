{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js\";\nimport React from 'react';\nimport commentBox from 'commentbox.io';\n\nclass PageWithComments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id_value: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      id_value: this.props.id\n    });\n    this.removeCommentBox = commentBox('5725357550338048-proj', {\n      defaultBoxId: this.props.id,\n      className: 'commentbox',\n      // the class of divs to look for\n      tlcParam: 'tlc-id',\n      // used for identifying links to comments on your page\n      backgroundColor: 'lightblue',\n      // default transparent\n      textColor: 'green',\n      // default black\n      subtextColor: 'green',\n      // default grey\n      singleSignOn: null,\n\n      // enables Single Sign-On (for Professional plans only)\n\n      /**\n       * Creates a unique URL to each box on your page.\n       * \n      /**\n       * Fires once the plugin loads its comments.\n       * May fire multiple times in its lifetime.\n       * \n       @param {number} count\n       */\n      onCommentCount(count) {\n        console.log(\"Comment count\", count);\n      }\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeCommentBox();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"commentbox\",\n      id: this.state.id_value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PageWithComments;","map":{"version":3,"sources":["/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js"],"names":["React","commentBox","PageWithComments","Component","state","id_value","componentDidMount","setState","props","id","removeCommentBox","defaultBoxId","className","tlcParam","backgroundColor","textColor","subtextColor","singleSignOn","onCommentCount","count","console","log","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJC,MAAAA,QAAQ,EAAC;AADL,KADmC;AAAA;;AAI3CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVF,MAAAA,QAAQ,EAAC,KAAKG,KAAL,CAAWC;AADV,KAAd;AAGA,SAAKC,gBAAL,GAAwBT,UAAU,CAAC,uBAAD,EAAyB;AACvDU,MAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC,EAD8B;AAEvDG,MAAAA,SAAS,EAAE,YAF4C;AAE9B;AACzBC,MAAAA,QAAQ,EAAE,QAH6C;AAGnC;AACpBC,MAAAA,eAAe,EAAE,WAJsC;AAIzB;AAC9BC,MAAAA,SAAS,EAAE,OAL4C;AAKnC;AACpBC,MAAAA,YAAY,EAAE,OANyC;AAMhC;AACvBC,MAAAA,YAAY,EAAE,IAPyC;;AAOnC;;AACpB;;;;;;;;;AASAC,MAAAA,cAAc,CAACC,KAAD,EAAQ;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACH;;AAnBsD,KAAzB,CAAlC;AAqBH;;AAEDG,EAAAA,oBAAoB,GAAG;AAEnB,SAAKZ,gBAAL;AACH;;AAEDa,EAAAA,MAAM,GAAG;AAEL,WACG,0CACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,EAAE,EAAE,KAAKnB,KAAL,CAAWC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH;AAKH;;AA3C0C;;AA8C/C,eAAeH,gBAAf","sourcesContent":["import React from 'react';\nimport commentBox from 'commentbox.io';\n\nclass PageWithComments extends React.Component {\n    state = {\n        id_value:\"\"\n    }\n    componentDidMount() {\n        this.setState({\n            id_value:this.props.id\n        })\n        this.removeCommentBox = commentBox('5725357550338048-proj',{\n            defaultBoxId: this.props.id,\n            className: 'commentbox', // the class of divs to look for\n            tlcParam: 'tlc-id', // used for identifying links to comments on your page\n            backgroundColor: 'lightblue', // default transparent\n            textColor: 'green', // default black\n            subtextColor: 'green', // default grey\n            singleSignOn: null, // enables Single Sign-On (for Professional plans only)\n            /**\n             * Creates a unique URL to each box on your page.\n             * \n            /**\n             * Fires once the plugin loads its comments.\n             * May fire multiple times in its lifetime.\n             * \n             @param {number} count\n             */\n            onCommentCount(count) {\n                console.log(\"Comment count\", count)\n            }\n        });\n    }\n\n    componentWillUnmount() {\n\n        this.removeCommentBox();\n    }\n\n    render() {\n\n        return (\n           <> \n            <div className=\"commentbox\" id={this.state.id_value}/>\n           </>\n        );\n    }\n}\n\nexport default PageWithComments"]},"metadata":{},"sourceType":"module"}