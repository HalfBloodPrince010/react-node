{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js\";\nimport React from 'react';\nimport commentBox from 'commentbox.io';\n\nclass PageWithComments extends React.Component {\n  componentDidMount() {\n    this.removeCommentBox = commentBox('5725357550338048-proj', {\n      className: 'commentbox',\n      // the class of divs to look for\n      defaultBoxId: 'commentbox',\n      // the default ID to associate to the div\n      tlcParam: 'tlc',\n      // used for identifying links to comments on your page\n      backgroundColor: null,\n      // default transparent\n      textColor: null,\n      // default black\n      subtextColor: null,\n      // default grey\n      singleSignOn: null,\n\n      // enables Single Sign-On (for Professional plans only)\n\n      /**\n       * Creates a unique URL to each box on your page.\n       * \n       * @param {string} boxId\n       * @param {Location} pageLocation - a copy of the current window.location\n       * @returns {string}\n       */\n      createBoxUrl(boxId, pageLocation) {\n        pageLocation.search = ''; // removes query string!\n\n        pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n\n        return pageLocation.href; // return url string\n      },\n\n      /**\n       * Fires once the plugin loads its comments.\n       * May fire multiple times in its lifetime.\n       * \n       * @param {number} count\n       */\n      onCommentCount(count) {}\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeCommentBox();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"commentbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default PageWithComments;","map":{"version":3,"sources":["/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js"],"names":["React","commentBox","PageWithComments","Component","componentDidMount","removeCommentBox","className","defaultBoxId","tlcParam","backgroundColor","textColor","subtextColor","singleSignOn","createBoxUrl","boxId","pageLocation","search","hash","href","onCommentCount","count","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,gBAAL,GAAwBJ,UAAU,CAAC,uBAAD,EAAyB;AACvDK,MAAAA,SAAS,EAAE,YAD4C;AAC9B;AACzBC,MAAAA,YAAY,EAAE,YAFyC;AAE3B;AAC5BC,MAAAA,QAAQ,EAAE,KAH6C;AAGtC;AACjBC,MAAAA,eAAe,EAAE,IAJsC;AAIhC;AACvBC,MAAAA,SAAS,EAAE,IAL4C;AAKtC;AACjBC,MAAAA,YAAY,EAAE,IANyC;AAMnC;AACpBC,MAAAA,YAAY,EAAE,IAPyC;;AAOnC;;AACpB;;;;;;;AAOAC,MAAAA,YAAY,CAACC,KAAD,EAAQC,YAAR,EAAsB;AAE9BA,QAAAA,YAAY,CAACC,MAAb,GAAsB,EAAtB,CAF8B,CAEJ;;AAC1BD,QAAAA,YAAY,CAACE,IAAb,GAAoBH,KAApB,CAH8B,CAGH;;AAC3B,eAAOC,YAAY,CAACG,IAApB,CAJ8B,CAIJ;AAC7B,OApBsD;;AAqBvD;;;;;;AAMAC,MAAAA,cAAc,CAACC,KAAD,EAAQ,CAErB;;AA7BsD,KAAzB,CAAlC;AA+BH;;AAEDC,EAAAA,oBAAoB,GAAG;AAEnB,SAAKhB,gBAAL;AACH;;AAEDiB,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;;AAhD0C;;AAmD/C,eAAepB,gBAAf","sourcesContent":["import React from 'react';\nimport commentBox from 'commentbox.io';\n\nclass PageWithComments extends React.Component {\n\n    componentDidMount() {\n\n        this.removeCommentBox = commentBox('5725357550338048-proj',{\n            className: 'commentbox', // the class of divs to look for\n            defaultBoxId: 'commentbox', // the default ID to associate to the div\n            tlcParam: 'tlc', // used for identifying links to comments on your page\n            backgroundColor: null, // default transparent\n            textColor: null, // default black\n            subtextColor: null, // default grey\n            singleSignOn: null, // enables Single Sign-On (for Professional plans only)\n            /**\n             * Creates a unique URL to each box on your page.\n             * \n             * @param {string} boxId\n             * @param {Location} pageLocation - a copy of the current window.location\n             * @returns {string}\n             */\n            createBoxUrl(boxId, pageLocation) {\n        \n                pageLocation.search = ''; // removes query string!\n                pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n                return pageLocation.href; // return url string\n            },\n            /**\n             * Fires once the plugin loads its comments.\n             * May fire multiple times in its lifetime.\n             * \n             * @param {number} count\n             */\n            onCommentCount(count) {\n        \n            }\n        });\n    }\n\n    componentWillUnmount() {\n\n        this.removeCommentBox();\n    }\n\n    render() {\n\n        return (\n            <div className=\"commentbox\">\n            </div>\n        );\n    }\n}\n\nexport default PageWithComments"]},"metadata":{},"sourceType":"module"}