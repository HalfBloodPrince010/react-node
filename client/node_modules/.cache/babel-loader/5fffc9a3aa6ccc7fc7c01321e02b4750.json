{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/Backups/Experiment/client/src/components/sports.js\";\nimport React, { useState, useEffect, memo, useRef } from 'react';\nimport './home.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Helper from './helper';\nimport Loader from './loading';\nimport Sharemodal from './shareModal';\n\nconst Sport = props => {\n  const [sportsNews, getSportsNews] = useState([]);\n  const [isopenModal, changeModalState] = useState(false);\n  const [activeItem, getActiveItem] = useState(\"\"); // Fetch Data\n\n  const fetchData = () => {\n    if (props.whichNews === 'Guardian' || props.whichNews === 'guardian') {\n      axios.get('http://reactnodenewsapplication-env.eba-ni6taxhj.us-east-1.elasticbeanstalk.com/guardian/sport').then(responseData => {\n        getSportsNews(responseData.data);\n      }).catch(responseData => {\n        console.log(\"error\");\n      });\n    } else if (props.whichNews === 'nytimes') {\n      axios.get('http://reactnodenewsapplication-env.eba-ni6taxhj.us-east-1.elasticbeanstalk.com/nytimes/sports').then(responseData => {\n        getSportsNews(responseData.data);\n      }).catch(responseData => {\n        console.log(\"error\");\n      });\n    }\n  };\n\n  const handleClose = () => {\n    changeModalState(false);\n    console.log(\"closing\");\n  };\n\n  const handleOpen = (title, weburl) => {\n    let sharedata = {\n      title: title,\n      webUrl: weburl\n    };\n    getActiveItem(sharedata);\n    changeModalState(true);\n  }; // Function to clear data if previous state changed\n\n\n  const prevNews = usePrevious(props.whichNews);\n  console.log(\"Previous News\", prevNews);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      if (prevNews != props.whichNews) {\n        getSportsNews([]);\n        ref.current = value;\n        fetchData();\n      }\n    }); // Only re-run if value changes\n\n    return ref.current;\n  }\n\n  if (sportsNews.length == 0) {\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  } else {\n    if (props.whichNews === 'guardian' || props.whichNews === 'Guardian') {\n      if (sportsNews.length != 0 && sportsNews[0].hasOwnProperty('blocks')) {\n        return React.createElement(React.Fragment, null, React.createElement(Helper, {\n          newsData: sportsNews,\n          handleOpen: handleOpen,\n          news: \"guardian\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(Sharemodal, {\n          isopenModal: isopenModal,\n          activeItem: activeItem,\n          handleClose: handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n    } else if (props.whichNews == 'nytimes') {\n      if (sportsNews.length != 0) {\n        return React.createElement(React.Fragment, null, React.createElement(Helper, {\n          newsData: sportsNews,\n          handleOpen: handleOpen,\n          news: \"nytimes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(Sharemodal, {\n          isopenModal: isopenModal,\n          activeItem: activeItem,\n          handleClose: handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      } // Else NY Loading end\n\n    } // NY News end\n\n  } // Else end\n\n}; // Function end\n\n\nconst mapStateToProps = state => {\n  return {\n    whichNews: state.newsState\n  };\n};\n\nexport default connect(mapStateToProps)(memo(Sport));","map":{"version":3,"sources":["/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/Backups/Experiment/client/src/components/sports.js"],"names":["React","useState","useEffect","memo","useRef","axios","connect","Helper","Loader","Sharemodal","Sport","props","sportsNews","getSportsNews","isopenModal","changeModalState","activeItem","getActiveItem","fetchData","whichNews","get","then","responseData","data","catch","console","log","handleClose","handleOpen","title","weburl","sharedata","webUrl","prevNews","usePrevious","value","ref","current","length","hasOwnProperty","mapStateToProps","state","newsState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, memo, useRef} from 'react'\nimport './home.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Helper from './helper'\nimport Loader from './loading'\nimport Sharemodal from './shareModal'\n\nconst Sport = props =>{\n\n    const [sportsNews, getSportsNews] = useState([])\n    const [isopenModal, changeModalState] = useState(false)\n    const [activeItem, getActiveItem] = useState(\"\")\n\n    // Fetch Data\n    const fetchData=()=>{\n        if(props.whichNews === 'Guardian' || props.whichNews === 'guardian'){\n        axios.get('http://reactnodenewsapplication-env.eba-ni6taxhj.us-east-1.elasticbeanstalk.com/guardian/sport')\n        .then(responseData => {\n            getSportsNews(responseData.data)\n        })\n        .catch(responseData=>{\n            console.log(\"error\");\n        })\n    }\n    else if(props.whichNews === 'nytimes'){\n        axios.get('http://reactnodenewsapplication-env.eba-ni6taxhj.us-east-1.elasticbeanstalk.com/nytimes/sports')\n        .then(responseData => {\n            getSportsNews(responseData.data)\n        })\n        .catch(responseData=>{\n            console.log(\"error\");\n        })\n\n    }\n}\n\n    const handleClose = () =>{\n        changeModalState(false)\n        console.log(\"closing\")\n    }\n\n    const handleOpen = (title, weburl) =>{\n        let sharedata = {title:title,webUrl:weburl}\n        getActiveItem(sharedata)\n        changeModalState(true)\n    }\n\n    // Function to clear data if previous state changed\n\n    const prevNews = usePrevious(props.whichNews);\n    console.log(\"Previous News\",prevNews)\n    function usePrevious(value) {\n        const ref = useRef()\n        useEffect(() => {\n        if(prevNews != props.whichNews){\n           getSportsNews([])\n          ref.current = value;\n          fetchData()}\n        }); // Only re-run if value changes\n        return ref.current;\n      }\n\n            if (sportsNews.length==0){\n                return(\n                    <Loader />\n                )\n            }\n            else{\n            if((props.whichNews === 'guardian' || props.whichNews === 'Guardian')){\n            if(sportsNews.length!=0 && sportsNews[0].hasOwnProperty('blocks')){\n                return (\n                    <>\n                        <Helper newsData={sportsNews} handleOpen={handleOpen} news=\"guardian\" />\n                        <Sharemodal isopenModal={isopenModal} activeItem={activeItem} handleClose={handleClose} />\n                    </>\n                    );\n                }\n            \n                else{\n                    return(\n                        <Loader />\n                    )\n            }\n\n}\n        else if(props.whichNews == 'nytimes'){\n        if(sportsNews.length!=0){\n            return (\n            <>\n                <Helper newsData={sportsNews} handleOpen={handleOpen} news=\"nytimes\" />\n                <Sharemodal isopenModal={isopenModal} activeItem={activeItem} handleClose={handleClose} />\n            </>\n            );\n        }\n        else{\n                return(\n                    <Loader />\n                      )\n            } // Else NY Loading end\n        } // NY News end\n    } // Else end\n} // Function end\n\n\nconst mapStateToProps = (state) =>{\n    return{\n        whichNews : state.newsState\n    }\n}\n\nexport default connect(mapStateToProps)(memo(Sport));"]},"metadata":{},"sourceType":"module"}