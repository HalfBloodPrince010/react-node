{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/Backups/Experiment/client/src/components/loading.js\";\nimport React from 'react';\nimport './home.css';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { useMediaQuery } from 'react-responsive';\n\nconst Loader = props => {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  });\n  console.log(\"Media query\", isDesktopOrLaptop);\n  let loaderContent = \"\";\n\n  if (isDesktopOrLaptop) {\n    loaderContent = React.createElement(\"div\", {\n      className: \"sweet-loading\",\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '47%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(BounceLoader, {\n      style: {\n        display: 'block',\n        background: '#2b4fc4'\n      },\n      size: 35,\n      color: \"#2b4fc4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        position: 'fixed',\n        left: '46.5%',\n        fontSize: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Loading\"));\n  } else {\n    loaderContent = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  return loaderContent;\n};\n\nexport default Loader;","map":{"version":3,"sources":["/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/Backups/Experiment/client/src/components/loading.js"],"names":["React","BounceLoader","useMediaQuery","Loader","props","isDesktopOrLaptop","query","console","log","loaderContent","position","top","left","display","background","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAG;AACnB,QAAMC,iBAAiB,GAAGH,aAAa,CAAC;AACpCI,IAAAA,KAAK,EAAE;AAD6B,GAAD,CAAvC;AAGEC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,iBAA3B;AACA,MAAII,aAAa,GAAG,EAApB;;AACA,MAAGJ,iBAAH,EAAqB;AACnBI,IAAAA,aAAa,GACO;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAI;AAACC,QAAAA,QAAQ,EAAC,OAAV;AAAmBC,QAAAA,GAAG,EAAC,KAAvB;AAA8BC,QAAAA,IAAI,EAAC;AAAnC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AACI,MAAA,KAAK,EAAI;AAACC,QAAAA,OAAO,EAAC,OAAT;AAAkBC,QAAAA,UAAU,EAAC;AAA7B,OADb;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,KAAK,EAAE,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAMA;AAAM,MAAA,KAAK,EAAE;AAACJ,QAAAA,QAAQ,EAAC,OAAV;AAAkBE,QAAAA,IAAI,EAAC,OAAvB;AAAgCG,QAAAA,QAAQ,EAAC;AAAzC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANA,CADpB;AAUD,GAXD,MAYI;AACAN,IAAAA,aAAa,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AACH;;AACH,SACIA,aADJ;AAGC,CAxBL;;AA0BA,eAAeN,MAAf","sourcesContent":["import React from 'react'\nimport './home.css';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { useMediaQuery } from 'react-responsive'\n\nconst Loader = props =>{\n    const isDesktopOrLaptop = useMediaQuery({\n        query: '(min-device-width: 1224px)'\n      })\n      console.log(\"Media query\", isDesktopOrLaptop)\n      let loaderContent = \"\"\n      if(isDesktopOrLaptop){\n        loaderContent = (\n                            <div className=\"sweet-loading\" style = {{position:'fixed', top:'50%', left:'47%'}}>\n                            <BounceLoader\n                                style = {{display:'block', background:'#2b4fc4'}}\n                                size={35}\n                                color={\"#2b4fc4\"}\n                            />\n                            <span style={{position:'fixed',left:'46.5%', fontSize:'14px'}}>Loading</span>\n                        </div>\n                        )\n      }\n      else{\n          loaderContent = (<span></span>)\n      }\n    return(\n        loaderContent\n    )\n    }\n\nexport default Loader;"]},"metadata":{},"sourceType":"module"}