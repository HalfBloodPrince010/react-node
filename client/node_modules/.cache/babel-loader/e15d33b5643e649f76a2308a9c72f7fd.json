{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js\";\nimport React from 'react';\nimport commentBox from 'commentbox.io';\nimport './home.css';\n\nclass PageWithComments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id_value: \"\"\n    };\n  }\n\n  componentDidMount() {\n    commentBox('my-project-id', {\n      className: 'commentbox',\n      // the class of divs to look for\n      defaultBoxId: this.props.id,\n      // the default ID to associate to the div\n      tlcParam: 'tlc',\n      // used for identifying links to comments on your page\n      backgroundColor: null,\n      // default transparent\n      textColor: null,\n      // default black\n      subtextColor: null,\n      // default grey\n      singleSignOn: null,\n\n      // enables Single Sign-On (for Professional plans only)\n\n      /**\n       * Creates a unique URL to each box on your page.\n       * \n       * @param {string} boxId\n       * @param {Location} pageLocation - a copy of the current window.location\n       * @returns {string}\n       */\n      createBoxUrl(boxId, pageLocation) {\n        pageLocation.search = ''; // removes query string!\n\n        pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n\n        return pageLocation.href; // return url string\n      },\n\n      /**\n       * Fires once the plugin loads its comments.\n       * May fire multiple times in its lifetime.\n       * \n       * @param {number} count\n       */\n      onCommentCount(count) {}\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeCommentBox();\n  }\n\n  render() {\n    let id = '/DetailedArticle/GUA' + this.state.id_value;\n    return React.createElement(\"div\", {\n      className: \"commentbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default PageWithComments; // \n// this.removeCommentBox = commentBox('5725357550338048-proj',{\n//     className: 'commentbox', // the class of divs to look for\n//     tlcParam: 'tlc-id', // used for identifying links to comments on your page\n//     backgroundColor: 'lightblue', // default transparent\n//     textColor: 'green', // default black\n//     subtextColor: 'green', // default grey\n//     singleSignOn: null, // enables Single Sign-On (for Professional plans only)\n//     /**\n//      * Creates a unique URL to each box on your page.\n//      * \n//     // @param {string} boxId\n//     // @param {string} pageLocation - a copy of the current window.location\n//     // @returns {string}\n//     //  */\n//     // createBoxUrl(boxId, pageLocation) {\n//     //     pageLocation.search = 'DetailedArticle/GUA/'; // removes query string!\n//     //     pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n//     //     console.log(\"Inside createBoxUrl search:\",pageLocation.search,\"\\nID\",boxId,\"\\nPagelocation\",pageLocation,\"\\nPagelocation href\",pageLocation.href,'\\nPagelocation hash',pageLocation.hash)\n//     //     return pageLocation.href; // return url string\n//     // },\n//     /**\n//      * Fires once the plugin loads its comments.\n//      * May fire multiple times in its lifetime.\n//      * \n//      @param {number} count\n//      */\n//     onCommentCount(count) {\n//         console.log(\"Comment count\", count)\n//     }\n// });","map":{"version":3,"sources":["/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/client/src/components/comments.js"],"names":["React","commentBox","PageWithComments","Component","state","id_value","componentDidMount","className","defaultBoxId","props","id","tlcParam","backgroundColor","textColor","subtextColor","singleSignOn","createBoxUrl","boxId","pageLocation","search","hash","href","onCommentCount","count","componentWillUnmount","removeCommentBox","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,YAAP;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJC,MAAAA,QAAQ,EAAC;AADL,KADmC;AAAA;;AAI3CC,EAAAA,iBAAiB,GAAG;AAChBL,IAAAA,UAAU,CAAC,eAAD,EAAkB;AACxBM,MAAAA,SAAS,EAAE,YADa;AACC;AACzBC,MAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWC,EAFD;AAEK;AAC7BC,MAAAA,QAAQ,EAAE,KAHc;AAGP;AACjBC,MAAAA,eAAe,EAAE,IAJO;AAID;AACvBC,MAAAA,SAAS,EAAE,IALa;AAKP;AACjBC,MAAAA,YAAY,EAAE,IANU;AAMJ;AACpBC,MAAAA,YAAY,EAAE,IAPU;;AAOJ;;AACpB;;;;;;;AAOAC,MAAAA,YAAY,CAACC,KAAD,EAAQC,YAAR,EAAsB;AAE9BA,QAAAA,YAAY,CAACC,MAAb,GAAsB,EAAtB,CAF8B,CAEJ;;AAC1BD,QAAAA,YAAY,CAACE,IAAb,GAAoBH,KAApB,CAH8B,CAGH;;AAC3B,eAAOC,YAAY,CAACG,IAApB,CAJ8B,CAIJ;AAC7B,OApBuB;;AAqBxB;;;;;;AAMAC,MAAAA,cAAc,CAACC,KAAD,EAAQ,CAErB;;AA7BuB,KAAlB,CAAV;AA+BH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKC,gBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIhB,EAAE,GAAG,yBAAyB,KAAKN,KAAL,CAAWC,QAA7C;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AA/C0C;;AAkD/C,eAAeH,gBAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport commentBox from 'commentbox.io';\nimport './home.css'\n\nclass PageWithComments extends React.Component {\n    state = {\n        id_value:\"\"\n    }\n    componentDidMount() {\n        commentBox('my-project-id', {\n            className: 'commentbox', // the class of divs to look for\n            defaultBoxId: this.props.id, // the default ID to associate to the div\n            tlcParam: 'tlc', // used for identifying links to comments on your page\n            backgroundColor: null, // default transparent\n            textColor: null, // default black\n            subtextColor: null, // default grey\n            singleSignOn: null, // enables Single Sign-On (for Professional plans only)\n            /**\n             * Creates a unique URL to each box on your page.\n             * \n             * @param {string} boxId\n             * @param {Location} pageLocation - a copy of the current window.location\n             * @returns {string}\n             */\n            createBoxUrl(boxId, pageLocation) {\n        \n                pageLocation.search = ''; // removes query string!\n                pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n                return pageLocation.href; // return url string\n            },\n            /**\n             * Fires once the plugin loads its comments.\n             * May fire multiple times in its lifetime.\n             * \n             * @param {number} count\n             */\n            onCommentCount(count) {\n        \n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.removeCommentBox();\n    }\n\n    render(){\n        let id = '/DetailedArticle/GUA' + this.state.id_value\n        return (\n            <div className=\"commentbox\"/>\n        );\n    }\n}\n\nexport default PageWithComments\n\n\n\n// \n// this.removeCommentBox = commentBox('5725357550338048-proj',{\n//     className: 'commentbox', // the class of divs to look for\n//     tlcParam: 'tlc-id', // used for identifying links to comments on your page\n//     backgroundColor: 'lightblue', // default transparent\n//     textColor: 'green', // default black\n//     subtextColor: 'green', // default grey\n//     singleSignOn: null, // enables Single Sign-On (for Professional plans only)\n//     /**\n//      * Creates a unique URL to each box on your page.\n//      * \n//     // @param {string} boxId\n//     // @param {string} pageLocation - a copy of the current window.location\n//     // @returns {string}\n//     //  */\n//     // createBoxUrl(boxId, pageLocation) {\n//     //     pageLocation.search = 'DetailedArticle/GUA/'; // removes query string!\n//     //     pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n//     //     console.log(\"Inside createBoxUrl search:\",pageLocation.search,\"\\nID\",boxId,\"\\nPagelocation\",pageLocation,\"\\nPagelocation href\",pageLocation.href,'\\nPagelocation hash',pageLocation.hash)\n//     //     return pageLocation.href; // return url string\n        \n//     // },\n//     /**\n//      * Fires once the plugin loads its comments.\n//      * May fire multiple times in its lifetime.\n//      * \n//      @param {number} count\n//      */\n//     onCommentCount(count) {\n//         console.log(\"Comment count\", count)\n//     }\n// });"]},"metadata":{},"sourceType":"module"}