{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/Backups/Experiment/client/src/components/home.js\";\nimport React, { useState, useEffect, memo, useRef } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport './home.css';\nimport axios from 'axios';\nimport { FacebookShareButton, TwitterShareButton, EmailShareButton } from 'react-share';\nimport { EmailIcon, FacebookIcon, TwitterIcon } from 'react-share';\nimport { connect } from 'react-redux';\nimport Helper from './helper';\nimport Loader from './loading';\n\nconst Home = props => {\n  const [newsAvailable, changeNewsState] = useState(\"Guardian\");\n  const [headlineNews, getNewsHeadlines] = useState([]);\n  const [isopenModal, changeModalState] = useState(false);\n  const [activeItem, getActiveItem] = useState(\"\"); // Fetch Data\n\n  const fetchData = () => {\n    if (props.whichNews === 'Guardian' || props.whichNews === 'guardian') {\n      axios.get('http://localhost:5000/').then(responseData => {\n        getNewsHeadlines(responseData.data);\n        changeNewsState(\"Guardian\");\n      }).catch(responseData => {\n        console.log(\"error\");\n      });\n    } else if (props.whichNews === 'nytimes') {\n      axios.get('http://localhost:5000/nytimes').then(responseData => {\n        getNewsHeadlines(responseData.data);\n        changeNewsState(\"nytimes\");\n      }).catch(responseData => {\n        console.log(\"error\");\n      });\n    }\n  };\n\n  const handleClose = () => {\n    changeModalState(false);\n    console.log(\"closing\");\n  };\n\n  const handleOpen = (title, weburl) => {\n    let sharedata = {\n      title: title,\n      webUrl: weburl\n    };\n    getActiveItem(sharedata);\n    changeModalState(true);\n  }; // Function to clear data if previous state changed\n\n\n  const prevNews = usePrevious(props.whichNews);\n  console.log(\"Previous News\", prevNews);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      if (prevNews != props.whichNews) {\n        getNewsHeadlines([]);\n        ref.current = value;\n        fetchData();\n      }\n    }); // Only re-run if value changes\n\n    return ref.current;\n  }\n\n  if (headlineNews.length == 0) {\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  } else {\n    if (props.whichNews === 'guardian' || props.whichNews === 'Guardian') {\n      if (headlineNews.length != 0 && headlineNews[0].hasOwnProperty('blocks')) {\n        return React.createElement(React.Fragment, null, React.createElement(Helper, {\n          newsData: headlineNews,\n          handleOpen: handleOpen,\n          news: \"guardian\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(Modal, {\n          show: isopenModal,\n          onHide: () => handleClose(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, activeItem.title)), React.createElement(Modal.Body, {\n          style: {\n            marginTop: '1px',\n            marginBottom: '1px',\n            paddingBottom: '0px',\n            fontSize: '20px'\n          },\n          className: \"d-flex justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Share via\")), React.createElement(Modal.Body, {\n          className: \"d-flex justify-content-between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(FacebookShareButton, {\n          url: activeItem.webUrl,\n          hashtag: \"CSCI_571_NewsApp\",\n          className: \"share\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(FacebookIcon, {\n          size: 70,\n          className: \"float-left\",\n          round: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        })), React.createElement(TwitterShareButton, {\n          url: activeItem.webUrl,\n          hashtags: ['CSCI_571_NewsApp'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(TwitterIcon, {\n          size: 70,\n          round: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })), React.createElement(EmailShareButton, {\n          url: activeItem.webUrl,\n          subject: \"#CSCI_571_NewsApp\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(EmailIcon, {\n          size: 70,\n          className: \"float-right\",\n          round: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })))));\n      } else {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }\n    } else if (props.whichNews == 'nytimes') {\n      if (headlineNews.length != 0) {\n        return React.createElement(React.Fragment, null, React.createElement(Helper, {\n          newsData: headlineNews,\n          handleOpen: handleOpen,\n          news: \"nytimes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(Modal, {\n          show: isopenModal,\n          onHide: () => handleClose(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, activeItem.title)), React.createElement(Modal.Body, {\n          style: {\n            marginTop: '1px',\n            marginBottom: '1px',\n            paddingBottom: '0px',\n            fontSize: '20px'\n          },\n          className: \"d-flex justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Share via\")), React.createElement(Modal.Body, {\n          className: \"d-flex justify-content-between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(FacebookShareButton, {\n          url: activeItem.webUrl,\n          hashtag: \"CSCI_571_NewsApp\",\n          className: \"share\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(FacebookIcon, {\n          size: 70,\n          className: \"float-left\",\n          round: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        })), React.createElement(TwitterShareButton, {\n          url: activeItem.webUrl,\n          hashtags: ['CSCI_571_NewsApp'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(TwitterIcon, {\n          size: 70,\n          round: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        })), React.createElement(EmailShareButton, {\n          url: activeItem.webUrl,\n          subject: \"#CSCI_571_NewsApp\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(EmailIcon, {\n          size: 70,\n          className: \"float-right\",\n          round: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        })))));\n      } else {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n      } // Else NY Loading end\n\n    } // NY News end\n\n  } // Else end\n\n}; // Function end\n\n\nconst mapStateToProps = state => {\n  return {\n    whichNews: state.newsState\n  };\n};\n\nexport default connect(mapStateToProps)(memo(Home)); // import React, { Component, useState, useEffect, memo, useRef} from 'react'\n// import {Card, Col, Row, Badge, ModalBody, ModalTitle, Button, Modal, ModalDialog} from 'react-bootstrap';\n// import { Link } from 'react-router-dom';\n// import './home.css';\n// import axios from 'axios';\n// import {FacebookShareButton, TwitterShareButton, EmailShareButton} from 'react-share';\n// import {EmailIcon,FacebookIcon,TwitterIcon} from 'react-share';\n// import { connect } from 'react-redux';\n// import BounceLoader from \"react-spinners/BounceLoader\";\n// import {IoMdShare} from 'react-icons/io'\n// const Home = props =>{\n//     const [newsAvailable, changeNewsState] = useState(\"Guardian\")\n//     const [headlineNews, getNewsHeadlines] = useState([])\n//     const [isopenModal, changeModalState] = useState(false)\n//     const [activeItem, getActiveItem] = useState(\"\")\n//     // Fetch Data\n//     const fetchData=()=>{\n//         if(props.whichNews === 'Guardian' || props.whichNews === 'guardian'){\n//         axios.get('http://localhost:5000/')\n//         .then(responseData => {\n//             console.log(\"Guardian\",responseData.data);\n//             getNewsHeadlines(responseData.data)\n//             changeNewsState(\"Guardian\")\n//         })\n//         .catch(responseData=>{\n//             console.log(\"error\");\n//         })\n//     }\n//     else if(props.whichNews === 'nytimes'){\n//         axios.get('http://localhost:5000/nytimes')\n//         .then(responseData => {\n//             console.log(\"NYT\",responseData.data);\n//             getNewsHeadlines(responseData.data)\n//             changeNewsState(\"nytimes\")\n//         })\n//         .catch(responseData=>{\n//             console.log(\"error\");\n//         })\n//     }\n// }\n// // Handling modal for sharing\n//     const handleClose = () =>{\n//         changeModalState(false)\n//     }\n//     const handleOpen = (title, weburl) =>{\n//         let sharedata = {title:title,webUrl:weburl}\n//         getActiveItem(sharedata)\n//         changeModalState(true)\n//     }\n// // Function to clear data if previous state changed\n//     const prevNews = usePrevious(props.whichNews);\n//     function usePrevious(value) {\n//         const ref = useRef()\n//         useEffect(() => {\n//         if(prevNews != props.whichNews){\n//            getNewsHeadlines([])\n//           ref.current = value;\n//           fetchData()}\n//         }); // Only re-run if value changes\n//         return ref.current;\n//       }\n//             if (headlineNews.length==0){\n//                 return(\n//                     <div className=\"sweet-loading\" style = {{position:'fixed', top:'50%', left:'47%'}}>\n//                         <BounceLoader\n//                         style = {{display:'block', background:'#2b4fc4'}}\n//                         size={35}\n//                         color={\"#2b4fc4\"}\n//                         />\n//                     <span style={{position:'fixed',left:'46.5%', fontSize:'14px'}}>Loading</span>\n//                   </div>\n//                 )\n//             }\n//             else{\n//                 if((props.whichNews === 'guardian' || props.whichNews === 'Guardian') ){\n//                 let newsCards = []\n//                 let x = 0\n//                 if(headlineNews.length!=0 && headlineNews[0].hasOwnProperty('blocks')){\n//                 let newsCards = headlineNews.map(news => {\n//                             let color = \"brown\"\n//                             let text_color = \"white\"\n//                             if(news.sectionId == 'sport' || news.sectionId == 'Sport'){\n//                                 color = '#f6c244';\n//                                 text_color = 'black';\n//                             }\n//                             else if(news.sectionId == 'world' || news.sectionId == 'World'){\n//                                 color = '#7c4eff';\n//                             }\n//                             else if(news.sectionId == 'technology' || news.sectionId == 'Technology'){\n//                                 color = '#cedc39';\n//                                 text_color = 'black';\n//                             }\n//                             else if(news.sectionId == 'politics' || news.sectionId == 'Politics'){\n//                                 color = '#419488';\n//                             }\n//                             else if(news.sectionId == 'business'|| news.sectionId == 'Business'){\n//                                 color = '#4696ec';\n//                             }\n//                             else {\n//                                 color = '#6e757c';\n//                                 text_color = 'white'\n//                             }\n//                             // &&  !news.blocks.main.elements[0].assets.length == 0\n//                             if(news.blocks.hasOwnProperty('main')){\n//                             let newsTitle = news.webTitle;\n//                             const newsDescription = news.blocks.body[0].bodyTextSummary;\n//                             // const newsImage = news.blocks.main.elements[0].assets[news.blocks.main.elements[0].assets.length-1].file;\n//                             let imageList = []\n//                             if(news.blocks.main.elements[0].assets.length == 0){\n//                                 imageList = [\"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"]\n//                             }\n//                             else{\n//                                 let filteredList = news.blocks.main.elements[0].assets.filter(image => {\n//                                     return image.typeData.width >= 2000\n//                                 })\n//                                 imageList = filteredList.map(filteredimg=>{\n//                                     return filteredimg.file\n//                                 })\n//                                 if(imageList.length == 0){\n//                                     imageList = [\"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"]\n//                                 }\n//                             }\n//                             const newsImage = imageList[0]\n//                             console.log(\"Image List\",imageList)\n//                             // newsImageFilter \n//                             let newsDate = news.webPublicationDate;\n//                             newsDate = newsDate.slice(0,10)\n//                             const newsId = news.id;\n//                             const newsBadge = news.sectionId\n//                             const newsShareUrl = news.webUrl;\n//                             let title_id = newsTitle.replace(/[^A-Z0-9]/ig, \"\").toLowerCase()\n//                             console.log(title_id)\n//                             return (\n//                                 <Link to={{ pathname: '/detailedarticle/gua/' + newsId}} style={{ width:'100%', display:'block', textDecoration: 'none', color:'inherit' }}>\n//                                 <div className=\"HomepageCard\">\n//                                 <Card style={{ width: '100%', marginTop:'30px', marginBottom:'30px', boxShadow:'0 6px 20px 0 rgba(0, 0, 0, 0.55)' }} >\n//                                         <Row>\n//                                             <Col lg={3} xs={12} className=\"mr-0 ml-0\" align=\"center\">\n//                                                 <Card.Img className=\"img-responsive\" variant=\"top\" src={newsImage} style={{ padding: '6px', border:'1px solid lightgray', margin:'10px', height:'200px', width:'90%', borderBottomLeftRadius: 'calc(.25rem - 1px)', borderBottomRightRadius: 'calc(.25rem - 1px)' }} />\n//                                             </Col>\n//                                             <Col lg={9} xs={12} className=\"mr-0 ml-0\">\n//                                                 <Card.Body>\n//                                                     <Card.Title><em>{newsTitle}<Link style={{zIndex:'1', position:'relative', textDecoration: 'none', color:'inherit'}} onClick={()=>handleOpen(newsTitle, newsShareUrl)}><IoMdShare/></Link></em></Card.Title>\n//                                                     <Card.Text className=\"news-description\">\n//                                                         {newsDescription}\n//                                                     </Card.Text>\n//                                                     <Card.Text>\n//                                                     <span> <em>{newsDate}</em> </span>\n//                                                     <Badge style={{backgroundColor: color, color:text_color}} className=\"float-right\">\n//                                                         {newsBadge}\n//                                                     </Badge>\n//                                                     </Card.Text>\n//                                                 </Card.Body>\n//                                             </Col>\n//                                         </Row>\n//                                     </Card>\n//                                 </div>\n//                                 </Link>\n//                                 )\n//                             }\n//                         })\n//             return (\n//                 <>\n//                     {newsCards}\n//                     <Modal show={isopenModal} onHide={()=>handleClose()}>\n//                             <Modal.Header closeButton>\n//                                 <Modal.Title>{activeItem.title}</Modal.Title>\n//                             </Modal.Header>\n//                             <Modal.Body style={{marginTop:'1px',marginBottom:'1px', paddingBottom:'0px', fontSize:'20px'}} className=\"d-flex justify-content-center\"><b>Share via</b></Modal.Body>\n//                             <Modal.Body className=\"d-flex justify-content-between\">\n//                             <FacebookShareButton url={activeItem.webUrl} hashtag='CSCI_571_NewsApp' className=\"share\">\n//                                 <FacebookIcon size={70} className='float-left' round={true}/>\n//                             </FacebookShareButton>\n//                             <TwitterShareButton url={activeItem.webUrl} hashtags={['CSCI_571_NewsApp']}>\n//                                 <TwitterIcon size={70} round={true}/>\n//                             </TwitterShareButton>\n//                             <EmailShareButton url={activeItem.webUrl} subject='#CSCI_571_NewsApp'>\n//                                 <EmailIcon size={70} className='float-right' round={true}/>\n//                             </EmailShareButton>\n//                             </Modal.Body>\n//                     </Modal>\n//                 </>\n//                 );\n//             }\n//         else{\n//             let err = true\n//             if(err){\n//                 return(\n//                     <div className=\"sweet-loading\" style = {{position:'fixed', top:'50%', left:'47%'}}>\n//                         <BounceLoader\n//                         // css={loaderCss}\n//                         style = {{display:'block', background:'#2b4fc4'}}\n//                         size={35}\n//                         color={\"#2b4fc4\"}\n//                         // loading={this.state.loading}\n//                         />\n//                     <span style={{position:'fixed',left:'46.5%', fontSize:'14px'}}>Loading</span>\n//                 </div>\n//                 )\n//             }\n//         }\n//     }\n//             else if(props.whichNews == 'nytimes'){\n//                 if(headlineNews.length!=0){\n//                 const newsCards = headlineNews.map(news => {\n//                         let color = \"brown\"\n//                         let text_color = 'white'\n//                         if(news.section == 'sports'|| news.section == 'Sports'){\n//                             color = '#f6c244';\n//                             text_color = 'black';\n//                         }\n//                         else if(news.section == 'world' || news.section == 'World'){\n//                             color = '#7c4eff';\n//                         }\n//                         else if(news.section == 'technology' || news.section == 'Technology'){\n//                             color = '#cedc39';\n//                             text_color = 'black';\n//                         }\n//                         else if(news.section == 'politics' || news.section == 'Politics'){\n//                             color = '#419488';\n//                         }\n//                         else if(news.section == 'business' || news.section == 'Business'){\n//                             color = '#4696ec';\n//                         }\n//                         else {\n//                             color = '#6e757c';\n//                             text_color = 'white'\n//                         }\n//                         if(news.hasOwnProperty('multimedia')){\n//                             // if (news.multimedia){\n//                         const newsTitle = news.title;\n//                         const newsDescription = news.abstract;\n//                         // let imagesList = news.multimedia.filter(image => image.width>=2000)\n//                         // let newsImage = (imagesList.length!=0)?imagesList[0].url: \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"\n//                         let imageList = []\n//                         if (news.multimedia){\n//                             if(news.multimedia.length == 0){\n//                                 imageList = [\"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"]\n//                             }\n//                             else{\n//                                 imageList = news.multimedia.filter(image => image.width>=2000)\n//                                 imageList = imageList.length==0?[\"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"]:[imageList[0].url]\n//                             }\n//                         }\n//                         else{\n//                             imageList = [\"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"]\n//                         }\n//                         const newsImage = imageList[0]\n//                         console.log(newsImage)\n//                         let newsDate = news.published_date;\n//                         newsDate = newsDate.slice(0,10)\n//                         const newsBadge = news.section;\n//                         const newsId = news.url;\n//                         const newsShareUrl = news.url;\n//                         let title_id = newsTitle.replace(/[^A-Z0-9]/ig, \"\").toLowerCase()\n//                         console.log(title_id)\n//                     return (\n//                         <Link to={{ pathname: '/detailedarticle/nyt/' + newsId }} style={{ width:'100%', display:'block', textDecoration: 'none', color:'inherit' }}>\n//                         <div className=\"HomepageCard\">\n//                         <Card style={{ width: '100%', marginTop:'30px', marginBottom:'30px', boxShadow:'0 6px 20px 0 rgba(0, 0, 0, 0.55)' }} >\n//                                 <Row>\n//                                     <Col lg={3} xs={12} className=\"mr-0 ml-0\" align=\"center\">\n//                                         <Card.Img className=\"img-responsive\" variant=\"top\" src={newsImage} style={{ padding: '6px', border:'1px solid lightgray', margin:'10px', height:'200px', width:'90%', borderBottomLeftRadius: 'calc(.25rem - 1px)', borderBottomRightRadius: 'calc(.25rem - 1px)' }} />\n//                                     </Col>\n//                                     <Col lg={9} xs={12} className=\"mr-0 ml-0\">\n//                                         <Card.Body>\n//                                             <Card.Title><em>{newsTitle}<Link style={{zIndex:'1', position:'relative', textDecoration: 'none', color:'inherit'}} onClick={()=>handleOpen(newsTitle, newsShareUrl)}><IoMdShare/></Link></em></Card.Title>\n//                                             <Card.Text className=\"news-description\">\n//                                                 {newsDescription}\n//                                             </Card.Text>\n//                                             <Card.Text>\n//                                             <span> <em>{newsDate}</em> </span>\n//                                             <Badge style={{backgroundColor: color, color:text_color }} className=\"float-right\">\n//                                                 {newsBadge}\n//                                             </Badge>\n//                                             </Card.Text>\n//                                         </Card.Body>\n//                                     </Col>\n//                                 </Row>\n//                             </Card>\n//                         </div>\n//                         </Link>\n//                         )\n//                     // }\n//                 }\n//             })\n//         return (\n//         <>\n//             {newsCards}\n//             <Modal show={isopenModal} onHide={()=>handleClose()}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>{activeItem.title}</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body style={{marginTop:'1px',marginBottom:'1px', paddingBottom:'0px', fontSize:'20px'}} className=\"d-flex justify-content-center\"><b>Share via</b></Modal.Body>\n//                     <Modal.Body className=\"d-flex justify-content-between\">\n//                     <FacebookShareButton url={activeItem.webUrl} hashtag='CSCI_571_NewsApp' className=\"share\">\n//                         <FacebookIcon size={70} className='float-left' round={true}/>\n//                     </FacebookShareButton>\n//                     <TwitterShareButton url={activeItem.webUrl} hashtags={['CSCI_571_NewsApp']}>\n//                         <TwitterIcon size={70} round={true}/>\n//                     </TwitterShareButton>\n//                     <EmailShareButton url={activeItem.webUrl} subject='#CSCI_571_NewsApp'>\n//                         <EmailIcon size={70} className='float-right' round={true}/>\n//                     </EmailShareButton>\n//                     </Modal.Body>\n//             </Modal>\n//         </>\n//         );\n//         }\n//         else{\n//             let err = true\n//             if(err){\n//                 return(\n//                     <div className=\"sweet-loading\" style = {{position:'fixed', top:'50%', left:'47%'}}>\n//                         <BounceLoader\n//                         style = {{display:'block', background:'#2b4fc4'}}\n//                         size={35}\n//                         color={\"#2b4fc4\"}\n//                         />\n//                     <span style={{position:'fixed',left:'46.5%', fontSize:'14px'}}>Loading</span>\n//                 </div>\n//                 )\n//             }\n//         } // Else NY Loading end\n//     } // NY News end\n//     } // Else end\n//     } // Function end\n// const mapStateToProps = (state) =>{\n//     return{\n//         whichNews : state.newsState\n//     }\n// }\n// export default connect(mapStateToProps)(memo(Home));","map":{"version":3,"sources":["/Users/prashanthpujar/Documents/Coursework/Web Technologies/Assignments/Homework 6/Backups/Experiment/client/src/components/home.js"],"names":["React","useState","useEffect","memo","useRef","Modal","axios","FacebookShareButton","TwitterShareButton","EmailShareButton","EmailIcon","FacebookIcon","TwitterIcon","connect","Helper","Loader","Home","props","newsAvailable","changeNewsState","headlineNews","getNewsHeadlines","isopenModal","changeModalState","activeItem","getActiveItem","fetchData","whichNews","get","then","responseData","data","catch","console","log","handleClose","handleOpen","title","weburl","sharedata","webUrl","prevNews","usePrevious","value","ref","current","length","hasOwnProperty","marginTop","marginBottom","paddingBottom","fontSize","mapStateToProps","state","newsState"],"mappings":"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":["import React, { useState, useEffect, memo, useRef} from 'react'\nimport { Modal } from 'react-bootstrap';\nimport './home.css';\nimport axios from 'axios';\nimport {FacebookShareButton, TwitterShareButton, EmailShareButton} from 'react-share';\nimport {EmailIcon,FacebookIcon,TwitterIcon} from 'react-share';\nimport { connect } from 'react-redux';\nimport Helper from './helper'\nimport Loader from './loading'\n\nconst Home = props =>{\n\n    const [newsAvailable, changeNewsState] = useState(\"Guardian\")\n    const [headlineNews, getNewsHeadlines] = useState([])\n    const [isopenModal, changeModalState] = useState(false)\n    const [activeItem, getActiveItem] = useState(\"\")\n\n    // Fetch Data\n    const fetchData=()=>{\n        if(props.whichNews === 'Guardian' || props.whichNews === 'guardian'){\n        axios.get('http://localhost:5000/')\n        .then(responseData => {\n            getNewsHeadlines(responseData.data)\n            changeNewsState(\"Guardian\")\n        })\n        .catch(responseData=>{\n            console.log(\"error\");\n        })\n    }\n    else if(props.whichNews === 'nytimes'){\n        axios.get('http://localhost:5000/nytimes')\n        .then(responseData => {\n            getNewsHeadlines(responseData.data)\n            changeNewsState(\"nytimes\")\n        })\n        .catch(responseData=>{\n            console.log(\"error\");\n        })\n\n    }\n}\n\n    const handleClose = () =>{\n        changeModalState(false)\n        console.log(\"closing\")\n    }\n\n    const handleOpen = (title, weburl) =>{\n        let sharedata = {title:title,webUrl:weburl}\n        getActiveItem(sharedata)\n        changeModalState(true)\n    }\n\n    // Function to clear data if previous state changed\n\n    const prevNews = usePrevious(props.whichNews);\n    console.log(\"Previous News\",prevNews)\n    function usePrevious(value) {\n        const ref = useRef()\n        useEffect(() => {\n        if(prevNews != props.whichNews){\n           getNewsHeadlines([])\n          ref.current = value;\n          fetchData()}\n        }); // Only re-run if value changes\n        return ref.current;\n      }\n\n            if (headlineNews.length==0){\n                return(\n                    <Loader />\n                )\n            }\n            else{\n            if((props.whichNews === 'guardian' || props.whichNews === 'Guardian')){\n            if(headlineNews.length!=0 && headlineNews[0].hasOwnProperty('blocks')){\n                return (\n                    <>\n                        <Helper newsData={headlineNews} handleOpen={handleOpen} news=\"guardian\" />\n                        <Modal show={isopenModal} onHide={()=>handleClose()}>\n                                <Modal.Header closeButton>\n                                <Modal.Title>{activeItem.title}</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body style={{marginTop:'1px',marginBottom:'1px', paddingBottom:'0px', fontSize:'20px'}} className=\"d-flex justify-content-center\"><b>Share via</b></Modal.Body>\n                                <Modal.Body className=\"d-flex justify-content-between\">\n                                <FacebookShareButton url={activeItem.webUrl} hashtag='CSCI_571_NewsApp' className=\"share\">\n                                    <FacebookIcon size={70} className='float-left' round={true}/>\n                                </FacebookShareButton>\n                                <TwitterShareButton url={activeItem.webUrl} hashtags={['CSCI_571_NewsApp']}>\n                                    <TwitterIcon size={70} round={true}/>\n                                </TwitterShareButton>\n                                <EmailShareButton url={activeItem.webUrl} subject='#CSCI_571_NewsApp'>\n                                    <EmailIcon size={70} className='float-right' round={true}/>\n                                </EmailShareButton>\n                                </Modal.Body>\n                        </Modal>\n                    </>\n                    );\n                }\n            \n                else{\n                    return(\n                        <Loader />\n                    )\n            }\n\n}\n        else if(props.whichNews == 'nytimes'){\n        if(headlineNews.length!=0){\n            return (\n            <>\n                <Helper newsData={headlineNews} handleOpen={handleOpen} news=\"nytimes\" />\n                <Modal show={isopenModal} onHide={()=>handleClose()}>\n                        <Modal.Header closeButton>\n                        <Modal.Title>{activeItem.title}</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{marginTop:'1px',marginBottom:'1px', paddingBottom:'0px', fontSize:'20px'}} className=\"d-flex justify-content-center\"><b>Share via</b></Modal.Body>\n                        <Modal.Body className=\"d-flex justify-content-between\">\n                        <FacebookShareButton url={activeItem.webUrl} hashtag='CSCI_571_NewsApp' className=\"share\">\n                            <FacebookIcon size={70} className='float-left' round={true}/>\n                        </FacebookShareButton>\n                        <TwitterShareButton url={activeItem.webUrl} hashtags={['CSCI_571_NewsApp']}>\n                            <TwitterIcon size={70} round={true}/>\n                        </TwitterShareButton>\n                        <EmailShareButton url={activeItem.webUrl} subject='#CSCI_571_NewsApp'>\n                            <EmailIcon size={70} className='float-right' round={true}/>\n                        </EmailShareButton>\n                        </Modal.Body>\n                </Modal>\n            </>\n            );\n        }\n        else{\n                return(\n                    <Loader />\n                    )\n            } // Else NY Loading end\n        } // NY News end\n    } // Else end\n} // Function end\n\n\nconst mapStateToProps = (state) =>{\n    return{\n        whichNews : state.newsState\n    }\n}\n\nexport default connect(mapStateToProps)(memo(Home));\n\n\n\n\n// import React, { Component, useState, useEffect, memo, useRef} from 'react'\n// import {Card, Col, Row, Badge, ModalBody, ModalTitle, Button, Modal, ModalDialog} from 'react-bootstrap';\n// import { Link } from 'react-router-dom';\n// import './home.css';\n// import axios from 'axios';\n// import {FacebookShareButton, TwitterShareButton, EmailShareButton} from 'react-share';\n// import {EmailIcon,FacebookIcon,TwitterIcon} from 'react-share';\n// import { connect } from 'react-redux';\n// import BounceLoader from \"react-spinners/BounceLoader\";\n// import {IoMdShare} from 'react-icons/io'\n\n\n// const Home = props =>{\n\n//     const [newsAvailable, changeNewsState] = useState(\"Guardian\")\n//     const [headlineNews, getNewsHeadlines] = useState([])\n//     const [isopenModal, changeModalState] = useState(false)\n//     const [activeItem, getActiveItem] = useState(\"\")\n\n//     // Fetch Data\n//     const fetchData=()=>{\n//         if(props.whichNews === 'Guardian' || props.whichNews === 'guardian'){\n//         axios.get('http://localhost:5000/')\n//         .then(responseData => {\n//             console.log(\"Guardian\",responseData.data);\n//             getNewsHeadlines(responseData.data)\n//             changeNewsState(\"Guardian\")\n//         })\n//         .catch(responseData=>{\n//             console.log(\"error\");\n//         })\n//     }\n//     else if(props.whichNews === 'nytimes'){\n//         axios.get('http://localhost:5000/nytimes')\n//         .then(responseData => {\n//             console.log(\"NYT\",responseData.data);\n//             getNewsHeadlines(responseData.data)\n//             changeNewsState(\"nytimes\")\n//         })\n//         .catch(responseData=>{\n//             console.log(\"error\");\n//         })\n\n//     }\n// }\n\n// // Handling modal for sharing\n\n//     const handleClose = () =>{\n//         changeModalState(false)\n//     }\n\n//     const handleOpen = (title, weburl) =>{\n//         let sharedata = {title:title,webUrl:weburl}\n//         getActiveItem(sharedata)\n//         changeModalState(true)\n//     }\n\n// // Function to clear data if previous state changed\n\n//     const prevNews = usePrevious(props.whichNews);\n//     function usePrevious(value) {\n//         const ref = useRef()\n//         useEffect(() => {\n//         if(prevNews != props.whichNews){\n//            getNewsHeadlines([])\n//           ref.current = value;\n//           fetchData()}\n//         }); // Only re-run if value changes\n//         return ref.current;\n//       }\n\n//             if (headlineNews.length==0){\n//                 return(\n//                     <div className=\"sweet-loading\" style = {{position:'fixed', top:'50%', left:'47%'}}>\n//                         <BounceLoader\n//                         style = {{display:'block', background:'#2b4fc4'}}\n//                         size={35}\n//                         color={\"#2b4fc4\"}\n//                         />\n//                     <span style={{position:'fixed',left:'46.5%', fontSize:'14px'}}>Loading</span>\n//                   </div>\n//                 )\n//             }\n//             else{\n//                 if((props.whichNews === 'guardian' || props.whichNews === 'Guardian') ){\n//                 let newsCards = []\n//                 let x = 0\n//                 if(headlineNews.length!=0 && headlineNews[0].hasOwnProperty('blocks')){\n//                 let newsCards = headlineNews.map(news => {\n//                             let color = \"brown\"\n//                             let text_color = \"white\"\n//                             if(news.sectionId == 'sport' || news.sectionId == 'Sport'){\n//                                 color = '#f6c244';\n//                                 text_color = 'black';\n//                             }\n//                             else if(news.sectionId == 'world' || news.sectionId == 'World'){\n//                                 color = '#7c4eff';\n//                             }\n//                             else if(news.sectionId == 'technology' || news.sectionId == 'Technology'){\n//                                 color = '#cedc39';\n//                                 text_color = 'black';\n//                             }\n//                             else if(news.sectionId == 'politics' || news.sectionId == 'Politics'){\n//                                 color = '#419488';\n//                             }\n//                             else if(news.sectionId == 'business'|| news.sectionId == 'Business'){\n//                                 color = '#4696ec';\n//                             }\n//                             else {\n//                                 color = '#6e757c';\n//                                 text_color = 'white'\n//                             }\n//                             // &&  !news.blocks.main.elements[0].assets.length == 0\n//                             if(news.blocks.hasOwnProperty('main')){\n//                             let newsTitle = news.webTitle;\n//                             const newsDescription = news.blocks.body[0].bodyTextSummary;\n//                             // const newsImage = news.blocks.main.elements[0].assets[news.blocks.main.elements[0].assets.length-1].file;\n//                             let imageList = []\n//                             if(news.blocks.main.elements[0].assets.length == 0){\n//                                 imageList = [\"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"]\n//                             }\n//                             else{\n//                                 let filteredList = news.blocks.main.elements[0].assets.filter(image => {\n//                                     return image.typeData.width >= 2000\n//                                 })\n//                                 imageList = filteredList.map(filteredimg=>{\n//                                     return filteredimg.file\n//                                 })\n//                                 if(imageList.length == 0){\n//                                     imageList = [\"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"]\n//                                 }\n//                             }\n//                             const newsImage = imageList[0]\n\n//                             console.log(\"Image List\",imageList)\n//                             // newsImageFilter \n//                             let newsDate = news.webPublicationDate;\n//                             newsDate = newsDate.slice(0,10)\n//                             const newsId = news.id;\n//                             const newsBadge = news.sectionId\n//                             const newsShareUrl = news.webUrl;\n//                             let title_id = newsTitle.replace(/[^A-Z0-9]/ig, \"\").toLowerCase()\n//                             console.log(title_id)\n//                             return (\n//                                 <Link to={{ pathname: '/detailedarticle/gua/' + newsId}} style={{ width:'100%', display:'block', textDecoration: 'none', color:'inherit' }}>\n//                                 <div className=\"HomepageCard\">\n//                                 <Card style={{ width: '100%', marginTop:'30px', marginBottom:'30px', boxShadow:'0 6px 20px 0 rgba(0, 0, 0, 0.55)' }} >\n//                                         <Row>\n//                                             <Col lg={3} xs={12} className=\"mr-0 ml-0\" align=\"center\">\n//                                                 <Card.Img className=\"img-responsive\" variant=\"top\" src={newsImage} style={{ padding: '6px', border:'1px solid lightgray', margin:'10px', height:'200px', width:'90%', borderBottomLeftRadius: 'calc(.25rem - 1px)', borderBottomRightRadius: 'calc(.25rem - 1px)' }} />\n//                                             </Col>\n//                                             <Col lg={9} xs={12} className=\"mr-0 ml-0\">\n//                                                 <Card.Body>\n//                                                     <Card.Title><em>{newsTitle}<Link style={{zIndex:'1', position:'relative', textDecoration: 'none', color:'inherit'}} onClick={()=>handleOpen(newsTitle, newsShareUrl)}><IoMdShare/></Link></em></Card.Title>\n//                                                     <Card.Text className=\"news-description\">\n//                                                         {newsDescription}\n//                                                     </Card.Text>\n//                                                     <Card.Text>\n//                                                     <span> <em>{newsDate}</em> </span>\n//                                                     <Badge style={{backgroundColor: color, color:text_color}} className=\"float-right\">\n//                                                         {newsBadge}\n//                                                     </Badge>\n//                                                     </Card.Text>\n//                                                 </Card.Body>\n//                                             </Col>\n//                                         </Row>\n//                                     </Card>\n//                                 </div>\n//                                 </Link>\n//                                 )\n//                             }\n//                         })\n//             return (\n//                 <>\n//                     {newsCards}\n//                     <Modal show={isopenModal} onHide={()=>handleClose()}>\n//                             <Modal.Header closeButton>\n//                                 <Modal.Title>{activeItem.title}</Modal.Title>\n//                             </Modal.Header>\n//                             <Modal.Body style={{marginTop:'1px',marginBottom:'1px', paddingBottom:'0px', fontSize:'20px'}} className=\"d-flex justify-content-center\"><b>Share via</b></Modal.Body>\n//                             <Modal.Body className=\"d-flex justify-content-between\">\n//                             <FacebookShareButton url={activeItem.webUrl} hashtag='CSCI_571_NewsApp' className=\"share\">\n//                                 <FacebookIcon size={70} className='float-left' round={true}/>\n//                             </FacebookShareButton>\n//                             <TwitterShareButton url={activeItem.webUrl} hashtags={['CSCI_571_NewsApp']}>\n//                                 <TwitterIcon size={70} round={true}/>\n//                             </TwitterShareButton>\n//                             <EmailShareButton url={activeItem.webUrl} subject='#CSCI_571_NewsApp'>\n//                                 <EmailIcon size={70} className='float-right' round={true}/>\n//                             </EmailShareButton>\n//                             </Modal.Body>\n//                     </Modal>\n//                 </>\n//                 );\n//             }\n//         else{\n//             let err = true\n//             if(err){\n//                 return(\n//                     <div className=\"sweet-loading\" style = {{position:'fixed', top:'50%', left:'47%'}}>\n//                         <BounceLoader\n//                         // css={loaderCss}\n//                         style = {{display:'block', background:'#2b4fc4'}}\n//                         size={35}\n//                         color={\"#2b4fc4\"}\n//                         // loading={this.state.loading}\n//                         />\n//                     <span style={{position:'fixed',left:'46.5%', fontSize:'14px'}}>Loading</span>\n//                 </div>\n//                 )\n//             }\n//         }\n//     }\n//             else if(props.whichNews == 'nytimes'){\n//                 if(headlineNews.length!=0){\n//                 const newsCards = headlineNews.map(news => {\n//                         let color = \"brown\"\n//                         let text_color = 'white'\n//                         if(news.section == 'sports'|| news.section == 'Sports'){\n//                             color = '#f6c244';\n//                             text_color = 'black';\n//                         }\n//                         else if(news.section == 'world' || news.section == 'World'){\n//                             color = '#7c4eff';\n//                         }\n//                         else if(news.section == 'technology' || news.section == 'Technology'){\n//                             color = '#cedc39';\n//                             text_color = 'black';\n//                         }\n//                         else if(news.section == 'politics' || news.section == 'Politics'){\n//                             color = '#419488';\n//                         }\n//                         else if(news.section == 'business' || news.section == 'Business'){\n//                             color = '#4696ec';\n//                         }\n//                         else {\n//                             color = '#6e757c';\n//                             text_color = 'white'\n//                         }\n//                         if(news.hasOwnProperty('multimedia')){\n//                             // if (news.multimedia){\n//                         const newsTitle = news.title;\n//                         const newsDescription = news.abstract;\n//                         // let imagesList = news.multimedia.filter(image => image.width>=2000)\n//                         // let newsImage = (imagesList.length!=0)?imagesList[0].url: \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"\n//                         let imageList = []\n//                         if (news.multimedia){\n//                             if(news.multimedia.length == 0){\n//                                 imageList = [\"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"]\n//                             }\n//                             else{\n//                                 imageList = news.multimedia.filter(image => image.width>=2000)\n//                                 imageList = imageList.length==0?[\"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"]:[imageList[0].url]\n//                             }\n//                         }\n//                         else{\n//                             imageList = [\"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\"]\n//                         }\n//                         const newsImage = imageList[0]\n//                         console.log(newsImage)\n//                         let newsDate = news.published_date;\n//                         newsDate = newsDate.slice(0,10)\n//                         const newsBadge = news.section;\n//                         const newsId = news.url;\n//                         const newsShareUrl = news.url;\n//                         let title_id = newsTitle.replace(/[^A-Z0-9]/ig, \"\").toLowerCase()\n//                         console.log(title_id)\n//                     return (\n//                         <Link to={{ pathname: '/detailedarticle/nyt/' + newsId }} style={{ width:'100%', display:'block', textDecoration: 'none', color:'inherit' }}>\n//                         <div className=\"HomepageCard\">\n//                         <Card style={{ width: '100%', marginTop:'30px', marginBottom:'30px', boxShadow:'0 6px 20px 0 rgba(0, 0, 0, 0.55)' }} >\n//                                 <Row>\n//                                     <Col lg={3} xs={12} className=\"mr-0 ml-0\" align=\"center\">\n//                                         <Card.Img className=\"img-responsive\" variant=\"top\" src={newsImage} style={{ padding: '6px', border:'1px solid lightgray', margin:'10px', height:'200px', width:'90%', borderBottomLeftRadius: 'calc(.25rem - 1px)', borderBottomRightRadius: 'calc(.25rem - 1px)' }} />\n//                                     </Col>\n//                                     <Col lg={9} xs={12} className=\"mr-0 ml-0\">\n//                                         <Card.Body>\n//                                             <Card.Title><em>{newsTitle}<Link style={{zIndex:'1', position:'relative', textDecoration: 'none', color:'inherit'}} onClick={()=>handleOpen(newsTitle, newsShareUrl)}><IoMdShare/></Link></em></Card.Title>\n//                                             <Card.Text className=\"news-description\">\n//                                                 {newsDescription}\n//                                             </Card.Text>\n//                                             <Card.Text>\n//                                             <span> <em>{newsDate}</em> </span>\n//                                             <Badge style={{backgroundColor: color, color:text_color }} className=\"float-right\">\n//                                                 {newsBadge}\n//                                             </Badge>\n//                                             </Card.Text>\n//                                         </Card.Body>\n//                                     </Col>\n//                                 </Row>\n//                             </Card>\n//                         </div>\n//                         </Link>\n//                         )\n//                     // }\n//                 }\n//             })\n//         return (\n//         <>\n//             {newsCards}\n//             <Modal show={isopenModal} onHide={()=>handleClose()}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>{activeItem.title}</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body style={{marginTop:'1px',marginBottom:'1px', paddingBottom:'0px', fontSize:'20px'}} className=\"d-flex justify-content-center\"><b>Share via</b></Modal.Body>\n//                     <Modal.Body className=\"d-flex justify-content-between\">\n//                     <FacebookShareButton url={activeItem.webUrl} hashtag='CSCI_571_NewsApp' className=\"share\">\n//                         <FacebookIcon size={70} className='float-left' round={true}/>\n//                     </FacebookShareButton>\n//                     <TwitterShareButton url={activeItem.webUrl} hashtags={['CSCI_571_NewsApp']}>\n//                         <TwitterIcon size={70} round={true}/>\n//                     </TwitterShareButton>\n//                     <EmailShareButton url={activeItem.webUrl} subject='#CSCI_571_NewsApp'>\n//                         <EmailIcon size={70} className='float-right' round={true}/>\n//                     </EmailShareButton>\n//                     </Modal.Body>\n//             </Modal>\n//         </>\n//         );\n//         }\n//         else{\n//             let err = true\n//             if(err){\n//                 return(\n//                     <div className=\"sweet-loading\" style = {{position:'fixed', top:'50%', left:'47%'}}>\n//                         <BounceLoader\n//                         style = {{display:'block', background:'#2b4fc4'}}\n//                         size={35}\n//                         color={\"#2b4fc4\"}\n//                         />\n//                     <span style={{position:'fixed',left:'46.5%', fontSize:'14px'}}>Loading</span>\n//                 </div>\n//                 )\n//             }\n\n//         } // Else NY Loading end\n//     } // NY News end\n\n//     } // Else end\n//     } // Function end\n\n\n// const mapStateToProps = (state) =>{\n//     return{\n//         whichNews : state.newsState\n//     }\n// }\n\n\n\n// export default connect(mapStateToProps)(memo(Home));\n\n"]},"metadata":{},"sourceType":"module"}